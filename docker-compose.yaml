services:
  db:
    image: postgres:10.3
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis
    networks:
      - app-network
    # Expose Redis on port 6379 for host access if needed
    ports:
      - "6379:6379"

  rabbitmq:
    image: "rabbitmq:3-management"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: openlly
      RABBITMQ_DEFAULT_PASS: openlly
    ports:
      - "15672:15672"   # Management UI
      - "5672:5672"     # AMQP protocol
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "3001:3001"
    depends_on:
      - db
      - redis
      - rabbitmq
    env_file:
      - .env
    command: npm run dev
    networks:
      - app-network

volumes:
  postgres:
    driver: local

networks:
  app-network:
    driver: bridge
